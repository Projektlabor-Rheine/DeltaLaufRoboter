import math
import DeltaLaufRoboter as botti
from adafruit_servokit import ServoKit
import time

minX = -40
maxX = 40
minZ = -120
maxZ = -170

def moveTest(x,y,z):
    x,y,z=botti.delta_calcInverse(x,y,z)
    botti.kit.servo[0].angle = x+80
    botti.kit.servo[1].angle = y+80
    botti.kit.servo[2].angle = z+80

class Group():
    def __init__(self, address,defaultRot,offset):
        self.defaultRot = defaultRot/360*100
        self.offset = offset
        self.ref = ServoKit(channels=16,address=address)
        for i in range(16):
            self.ref.servo[i].actuation_range = 120
        self.x = 0
        self.y = 0
        self.z = 0

    def moveRot(self,rot,extend,height):
        rot+=self.defaultRot
        rad = math.pi*2*(rot/100)
        x = math.cos(rad)*((maxX-minX)/2)*(extend/100)
        y = math.sin(rad)*((maxX-minX)/2)*(extend/100)
        z = (maxZ-minZ)*(height/100)+minZ

        self.move(x,y,z)

    def move(self,x=None,y=None,z=None):
        if x == None:
            x = self.x

        if y == None:
            y = self.y

        if z == None:
            z = self.z

        #Checks if the group has to move 
        if x != self.x or y != self.y or z != self.z:
            print("Move")
            #Calculates the new positions
            botX,botY,botZ = botti.delta_calcInverse(x,y,z)
            r=0
            for i in range(0,10,4):
                self.ref.servo[i].angle = -botX+87
                self.ref.servo[i+1].angle = -botY+87
                self.ref.servo[i+2].angle = -botZ+87
                r+=3

    def angle(self,botX,botY,botZ):
        r=0
        for i in range(0,10,4):
            self.ref.servo[i].angle = botX
            self.ref.servo[i+1].angle = botY
            self.ref.servo[i+2].angle = botZ
            r+=3


groupA = Group(0x40,0,[88, 89, 88, 100, 96, 100, 103, 100, 84, 85, 86])
groupB = Group(0x60,60,[77, 82, 76, 100, 77, 80, 76, 100, 84, 81, 81])

#Raw rotating of angle
'''
#Default pos
groupA.angle(120,120,120)
groupB.angle(120,120,120)
input()

#A Up
groupA.angle(10,10,10)
'''

for i in range(0,100):
    groupA.moveRot(i,100,0)
    time.sleep(.01)
